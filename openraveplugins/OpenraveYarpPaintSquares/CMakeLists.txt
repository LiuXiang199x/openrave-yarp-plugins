# Generated by Juan G Victores 2013
# Thanks Rosen Diankov for all OpenRAVE developments

IF (ENABLE_OpenraveYarpPaintSquares)

cmake_minimum_required (VERSION 2.6.0)

set(KEYWORD "OpenraveYarpPaintSquares")

project(${KEYWORD})

set(CMAKE_PREFIX_PATH ${CMAKE_CURRENT_SOURCE_DIR})
find_package(OpenRAVE REQUIRED)
find_package(YARP REQUIRED)

if( CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX )
  add_definitions("-fno-strict-aliasing -Wall -fPIC")
endif( CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX )

find_package(Boost ${OpenRAVE_Boost_VERSION} EXACT COMPONENTS iostreams python thread)

include_directories(${OpenRAVE_INCLUDE_DIRS} ${YARP_INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR} )
if( Boost_INCLUDE_DIRS )
  include_directories(${Boost_INCLUDE_DIRS})
endif()

link_directories(${OpenRAVE_LIBRARY_DIRS} ${Boost_LIBRARY_DIRS})

macro(build_openrave_plugin name)
  add_library(${name} SHARED ${name}.cpp)
  set_target_properties(${name} PROPERTIES COMPILE_FLAGS "${OpenRAVE_CXX_FLAGS}")
  set_target_properties(${name} PROPERTIES LINK_FLAGS "${OpenRAVE_LINK_FLAGS}")
  target_link_libraries(${name} ${YARP_LIBRARIES} ${OpenRAVE_LIBRARIES} yarpplugins )
  # install(TARGETS ${name} DESTINATION lib )
  # install(TARGETS ${name} DESTINATION ${OpenRAVE_LIBRARY_DIRS}/${OpenRAVE_LIBRARIES}-plugins)
  execute_process(COMMAND openrave-config --plugins-dir OUTPUT_VARIABLE OPENRAVE_PLUGINS_INSTALL_DIR)
  string(REGEX REPLACE "\n$" "" OPENRAVE_PLUGINS_INSTALL_DIR "${OPENRAVE_PLUGINS_INSTALL_DIR}")
  install(TARGETS ${name} DESTINATION ${OPENRAVE_PLUGINS_INSTALL_DIR} )
endmacro(build_openrave_plugin)

build_openrave_plugin(${KEYWORD})

ENDIF (ENABLE_OpenraveYarpPaintSquares)

